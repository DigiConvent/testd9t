name: Recreate Release on Go File Changes

on:
  push:
    branches:
      - main

jobs:
  check-go-files:
    runs-on: ubuntu-latest
    outputs:
      go_files_changed: ${{ steps.changed-backend-files.outputs.any_changed }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get changed files in the backend folder
        id: changed-backend-files
        uses: tj-actions/changed-files@v45
        with:
          files: backend/**/**.go

      - name: Run step if any file(s) in the backend folder change
        if: steps.changed-backend-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-backend-files.outputs.all_changed_files }}
        run: |
          echo "One or more files in the backend folder has changed."
          echo "List all the files that have changed: $ALL_CHANGED_FILES"

  recreate-release:  
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Delete the release
        uses: sgpublic/delete-release-action@v1.1
        with:
          release-drop: true
          release-drop-tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Renew the release
        run: |
          tag_name="0.0.0"

          git tag $tag_name
          git push origin $tag_name
          echo "New tag $tag_name created successfully"
          
          release_body="Automated release"
          response=$(curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -d '{"tag_name":"${tag_name}","name":"${tag_name}","body":"'"$release_body"'"}' "https://api.github.com/repos/${{ github.repository }}/releases")

          echo "Release created successfully: $response"

  trigger-release-workflow:
    runs-on: ubuntu-latest
    needs: recreate-release
    steps:
    - name: Trigger a release workflow
      run: |
        curl -XPOST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
        -d '{"event_type": "release-created"}' \
        https://api.github.com/repos/${{ github.repository }}/dispatches